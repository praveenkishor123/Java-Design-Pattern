Proxy Design Pattern
=========================

What is a Proxy ?
-----------------
A proxy is something that is authorized to do some work on behalf of an original object.


Example
--------
Suppose, we are busy with our daily life and forget to pay our bills.
So, we can approach to an organization that can pay bills on our behalf and charge us for providing 
this service.


Why do we need this?
----------------------
1. Do something more which is not in scope of the original object.
2. To handle certain functionality.


Common applications
---------------------
1. Pre processing - loggin, filtering, etc.
2. Post processing - filter, locking, etc.
3. Overriding functionality - used for some legacy codes.
4. Caching mechanism in some resource intensive applications to cache some frequently accessed data. This helps to reduce the traffic on the network.
5. Security mechanisms - Spring AOP framework. The proxies in this framework is used to apply some functionality before and after invoking some methods.



Browser ===>  Proxy Server ====>  Internet Service Provider

We use proxies to implement the proxy servers to mimic the ISP.


Interfaces(to provide loose coupling and to provide strong contract among the modules) to use the Proxy DP :-
--------------------------------------------------------------------------------------------------------------------
1. <<interface>> ISP  --->   Vodafone and InternetProxy class will implement this interface.


Finally, there is a Browser object that will send the request.





